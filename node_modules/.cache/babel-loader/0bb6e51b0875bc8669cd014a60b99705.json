{"remainingRequest":"/Volumes/Workzone/Saber/node_modules/babel-loader/lib/index.js!/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Workzone/Saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Workzone/Saber/src/page/index/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Workzone/Saber/src/page/index/index.vue","mtime":1590478366882},{"path":"/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js","mtime":1590478895012},{"path":"/Volumes/Workzone/Saber/node_modules/babel-loader/lib/index.js","mtime":1590478873019},{"path":"/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js","mtime":1590478895012},{"path":"/Volumes/Workzone/Saber/node_modules/vue-loader/lib/index.js","mtime":1590478898888}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nimport tags from \"./tags\";\nimport top from \"./top/\";\nimport sidebar from \"./sidebar/\";\nimport admin from \"@/util/admin\"; // import { validatenull } from \"@/util/validate\";\n// import { calcDate } from \"@/util/date.js\";\n// import { getStore } from \"@/util/store.js\";\n\nexport default {\n  components: {\n    top: top,\n    tags: tags,\n    sidebar: sidebar\n  },\n  name: \"index\",\n  data: function data() {\n    return {\n      //刷新token锁\n      refreshLock: false,\n      //刷新token的时间\n      refreshTime: \"\"\n    };\n  },\n  created: function created() {\n    //实时检测刷新token\n    this.refreshToken();\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  computed: mapGetters([\"isLock\", \"isCollapse\", \"website\"]),\n  props: [],\n  methods: {\n    showCollapse: function showCollapse() {\n      this.$store.commit(\"SET_COLLAPSE\");\n    },\n    // 屏幕检测\n    init: function init() {\n      var _this = this;\n\n      this.$store.commit(\"SET_SCREEN\", admin.getScreen());\n\n      window.onresize = function () {\n        setTimeout(function () {\n          _this.$store.commit(\"SET_SCREEN\", admin.getScreen());\n        }, 0);\n      };\n    },\n    // 10分钟检测一次token\n    refreshToken: function refreshToken() {\n      /*this.refreshTime = setInterval(() => {\n        const token = getStore({\n          name: \"token\",\n          debug: true\n        });\n        const date = calcDate(token.datetime, new Date().getTime());\n        if (validatenull(date)) return;\n        if (!(date.seconds >= this.website.tokenTime) && !this.refreshLock) {\n          this.refreshLock = true;\n          this.$store\n            .dispatch(\"RefeshToken\")\n            .then(() => {\n              this.refreshLock = false;\n            })\n            .catch(() => {\n              this.refreshLock = false;\n            });\n        }\n      }, 10000);*/\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,IAAA;AACA,OAAA,GAAA;AACA,OAAA,OAAA;AACA,OAAA,KAAA,MAAA,cAAA,C,CACA;AACA;AACA;;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,GAAA,EAAA,GADA;AAEA,IAAA,IAAA,EAAA,IAFA;AAGA,IAAA,OAAA,EAAA;AAHA,GADA;AAMA,EAAA,IAAA,EAAA,OANA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA;AACA,MAAA,WAAA,EAAA,KAFA;AAGA;AACA,MAAA,WAAA,EAAA;AAJA,KAAA;AAMA,GAdA;AAeA,EAAA,OAfA,qBAeA;AACA;AACA,SAAA,YAAA;AACA,GAlBA;AAmBA,EAAA,OAnBA,qBAmBA;AACA,SAAA,IAAA;AACA,GArBA;AAsBA,EAAA,QAAA,EAAA,UAAA,CAAA,CAAA,QAAA,EAAA,YAAA,EAAA,SAAA,CAAA,CAtBA;AAuBA,EAAA,KAAA,EAAA,EAvBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,cAAA;AACA,KAHA;AAIA;AACA,IAAA,IALA,kBAKA;AAAA;;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,YAAA,EAAA,KAAA,CAAA,SAAA,EAAA;;AACA,MAAA,MAAA,CAAA,QAAA,GAAA,YAAA;AACA,QAAA,UAAA,CAAA,YAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,YAAA,EAAA,KAAA,CAAA,SAAA,EAAA;AACA,SAFA,EAEA,CAFA,CAAA;AAGA,OAJA;AAKA,KAZA;AAaA;AACA,IAAA,YAdA,0BAcA;AACA;;;;;;;;;;;;;;;;;;;AAmBA;AAlCA;AAxBA,CAAA","sourcesContent":["<template>\n  <div class=\"avue-contail\"\n       :class=\"{'avue--collapse':isCollapse}\">\n    <div class=\"avue-header\">\n      <!-- 顶部导航栏 -->\n      <top />\n    </div>\n\n    <div class=\"avue-layout\">\n      <div class=\"avue-left\">\n        <!-- 左侧导航栏 -->\n        <sidebar />\n      </div>\n      <div class=\"avue-main\">\n        <!-- 顶部标签卡 -->\n        <tags />\n        <!-- 主体视图层 -->\n        <el-scrollbar style=\"height:100%\">\n          <keep-alive>\n            <router-view class=\"avue-view\"\n                         v-if=\"$route.meta.keepAlive\" />\n          </keep-alive>\n          <router-view class=\"avue-view\"\n                       v-if=\"!$route.meta.keepAlive\" />\n        </el-scrollbar>\n\n      </div>\n    </div>\n    <!-- <el-footer class=\"avue-footer\">\n      <img src=\"/svg/logo.svg\"\n           alt=\"\"\n           class=\"logo\">\n      <p class=\"copyright\">© 2018 Avue designed by smallwei</p>\n    </el-footer> -->\n    <div class=\"avue-shade\"\n         @click=\"showCollapse\"></div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport tags from \"./tags\";\nimport top from \"./top/\";\nimport sidebar from \"./sidebar/\";\nimport admin from \"@/util/admin\";\n// import { validatenull } from \"@/util/validate\";\n// import { calcDate } from \"@/util/date.js\";\n// import { getStore } from \"@/util/store.js\";\nexport default {\n  components: {\n    top,\n    tags,\n    sidebar\n  },\n  name: \"index\",\n  data() {\n    return {\n      //刷新token锁\n      refreshLock: false,\n      //刷新token的时间\n      refreshTime: \"\"\n    };\n  },\n  created() {\n    //实时检测刷新token\n    this.refreshToken();\n  },\n  mounted() {\n    this.init();\n  },\n  computed: mapGetters([\"isLock\", \"isCollapse\", \"website\"]),\n  props: [],\n  methods: {\n    showCollapse() {\n      this.$store.commit(\"SET_COLLAPSE\");\n    },\n    // 屏幕检测\n    init() {\n      this.$store.commit(\"SET_SCREEN\", admin.getScreen());\n      window.onresize = () => {\n        setTimeout(() => {\n          this.$store.commit(\"SET_SCREEN\", admin.getScreen());\n        }, 0);\n      };\n    },\n    // 10分钟检测一次token\n    refreshToken() {\n      /*this.refreshTime = setInterval(() => {\n        const token = getStore({\n          name: \"token\",\n          debug: true\n        });\n        const date = calcDate(token.datetime, new Date().getTime());\n        if (validatenull(date)) return;\n        if (!(date.seconds >= this.website.tokenTime) && !this.refreshLock) {\n          this.refreshLock = true;\n          this.$store\n            .dispatch(\"RefeshToken\")\n            .then(() => {\n              this.refreshLock = false;\n            })\n            .catch(() => {\n              this.refreshLock = false;\n            });\n        }\n      }, 10000);*/\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/page/index"}]}