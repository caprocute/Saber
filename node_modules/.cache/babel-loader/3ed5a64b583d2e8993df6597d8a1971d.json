{"remainingRequest":"/Volumes/Workzone/Saber/node_modules/babel-loader/lib/index.js!/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Workzone/Saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Workzone/Saber/src/views/system/user.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Workzone/Saber/src/views/system/user.vue","mtime":1590478366896},{"path":"/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js","mtime":1590478895012},{"path":"/Volumes/Workzone/Saber/node_modules/babel-loader/lib/index.js","mtime":1590478873019},{"path":"/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js","mtime":1590478895012},{"path":"/Volumes/Workzone/Saber/node_modules/vue-loader/lib/index.js","mtime":1590478898888}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Volumes/Workzone/Saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getList, remove, update, add, grant, resetPassword } from \"@/api/system/user\";\nimport { getDeptTree } from \"@/api/system/dept\";\nimport { getRoleTree } from \"@/api/system/role\";\nimport { getPostList } from \"@/api/system/post\";\nimport { mapGetters } from \"vuex\";\nimport website from '@/config/website';\nimport { getToken } from '@/util/auth';\nexport default {\n  data: function data() {\n    var _this = this;\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this.form.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      form: {},\n      roleBox: false,\n      excelBox: false,\n      loading: true,\n      selectionList: [],\n      query: {},\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      init: {\n        roleTree: [],\n        deptTree: []\n      },\n      props: {\n        label: \"title\",\n        value: \"key\"\n      },\n      roleGrantList: [],\n      roleTreeObj: [],\n      option: {\n        height: 'auto',\n        calcHeight: 80,\n        searchShow: true,\n        searchMenuSpan: 6,\n        tip: false,\n        border: true,\n        index: true,\n        selection: true,\n        viewBtn: true,\n        column: [{\n          label: \"登录账号\",\n          prop: \"account\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入登录账号\",\n            trigger: \"blur\"\n          }],\n          span: website.tenantMode ? 12 : 24\n        }, {\n          label: \"所属租户\",\n          prop: \"tenantId\",\n          type: \"tree\",\n          dicUrl: \"/api/blade-system/tenant/select\",\n          props: {\n            label: \"tenantName\",\n            value: \"tenantId\"\n          },\n          hide: !website.tenantMode,\n          addDisplay: website.tenantMode,\n          editDisplay: website.tenantMode,\n          viewDisplay: website.tenantMode,\n          search: false,\n          rules: [{\n            required: true,\n            message: \"请输入所属租户\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: '密码',\n          prop: 'password',\n          hide: true,\n          editDisplay: false,\n          viewDisplay: false,\n          rules: [{\n            required: true,\n            validator: validatePass,\n            trigger: 'blur'\n          }]\n        }, {\n          label: '确认密码',\n          prop: 'password2',\n          hide: true,\n          editDisplay: false,\n          viewDisplay: false,\n          rules: [{\n            required: true,\n            validator: validatePass2,\n            trigger: 'blur'\n          }]\n        }, {\n          label: \"用户昵称\",\n          prop: \"name\",\n          rules: [{\n            required: true,\n            message: \"请输入用户昵称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"用户姓名\",\n          prop: \"realName\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入用户姓名\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"所属角色\",\n          prop: \"roleId\",\n          multiple: true,\n          type: \"tree\",\n          dicData: [],\n          props: {\n            label: \"title\"\n          },\n          slot: true,\n          checkStrictly: true,\n          rules: [{\n            required: true,\n            message: \"请选择所属角色\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: \"所属部门\",\n          prop: \"deptId\",\n          type: \"tree\",\n          multiple: true,\n          dicData: [],\n          props: {\n            label: \"title\"\n          },\n          slot: true,\n          checkStrictly: true,\n          rules: [{\n            required: true,\n            message: \"请选择所属部门\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: \"用户编号\",\n          prop: \"code\",\n          hide: true\n        }, {\n          label: \"所属岗位\",\n          prop: \"postId\",\n          type: \"tree\",\n          multiple: true,\n          dicData: [],\n          hide: true,\n          props: {\n            label: \"postName\",\n            value: \"id\"\n          },\n          rules: [{\n            required: true,\n            message: \"请选择所属岗位\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: \"手机号码\",\n          prop: \"phone\",\n          overHidden: true\n        }, {\n          label: \"电子邮箱\",\n          prop: \"email\",\n          hide: true,\n          overHidden: true\n        }, {\n          label: \"用户性别\",\n          prop: \"sex\",\n          type: \"select\",\n          dicData: [{\n            label: \"男\",\n            value: 1\n          }, {\n            label: \"女\",\n            value: 2\n          }, {\n            label: \"未知\",\n            value: 3\n          }],\n          hide: true\n        }, {\n          label: \"用户生日\",\n          type: \"date\",\n          prop: \"birthday\",\n          format: \"yyyy-MM-dd hh:mm:ss\",\n          valueFormat: \"yyyy-MM-dd hh:mm:ss\",\n          hide: true\n        }, {\n          label: \"账号状态\",\n          prop: \"statusName\",\n          hide: true,\n          display: false\n        }]\n      },\n      data: [],\n      excelForm: {},\n      excelOption: {\n        submitBtn: false,\n        emptyBtn: false,\n        column: [{\n          label: '模板上传',\n          prop: 'excelFile',\n          type: 'upload',\n          drag: true,\n          loadText: '模板上传中，请稍等',\n          span: 24,\n          propsHttp: {\n            res: 'data'\n          },\n          tip: '请上传 .xls,.xlsx 标准格式文件',\n          action: \"/api/blade-user/import-user\"\n        }, {\n          label: '模板下载',\n          prop: 'excelTemplate',\n          formslot: true,\n          span: 24\n        }]\n      }\n    };\n  },\n  watch: {\n    'form.tenantId': function formTenantId() {\n      var _this2 = this;\n\n      if (this.form.tenantId !== '') {\n        getDeptTree(this.form.tenantId).then(function (res) {\n          var column = _this2.findObject(_this2.option.column, \"deptId\");\n\n          column.dicData = res.data.data;\n        });\n        getRoleTree(this.form.tenantId).then(function (res) {\n          var column = _this2.findObject(_this2.option.column, \"roleId\");\n\n          column.dicData = res.data.data;\n        });\n        getPostList(this.form.tenantId).then(function (res) {\n          var column = _this2.findObject(_this2.option.column, \"postId\");\n\n          column.dicData = res.data.data;\n        });\n      }\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"userInfo\", \"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.user_add, false),\n        viewBtn: this.vaildData(this.permission.user_view, false),\n        delBtn: this.vaildData(this.permission.user_delete, false),\n        editBtn: this.vaildData(this.permission.user_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    submitRole: function submitRole() {\n      var _this3 = this;\n\n      var roleList = this.$refs.treeRole.getCheckedKeys().join(\",\");\n      grant(this.ids, roleList).then(function () {\n        _this3.roleBox = false;\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this3.onLoad(_this3.page);\n      });\n    },\n    rowSave: function rowSave(row, done, loading) {\n      var _this4 = this;\n\n      row.deptId = row.deptId.join(\",\");\n      row.roleId = row.roleId.join(\",\");\n      row.postId = row.postId.join(\",\");\n      add(row).then(function () {\n        done();\n\n        _this4.onLoad(_this4.page);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this5 = this;\n\n      row.deptId = row.deptId.join(\",\");\n      row.roleId = row.roleId.join(\",\");\n      row.postId = row.postId.join(\",\");\n      update(row).then(function () {\n        done();\n\n        _this5.onLoad(_this5.page);\n\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this6 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this6.onLoad(_this6.page);\n\n        _this6.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    handleDelete: function handleDelete() {\n      var _this7 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this7.ids);\n      }).then(function () {\n        _this7.onLoad(_this7.page);\n\n        _this7.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this7.$refs.crud.toggleSelection();\n      });\n    },\n    handleReset: function handleReset() {\n      var _this8 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择账号密码重置为123456?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return resetPassword(_this8.ids);\n      }).then(function () {\n        _this8.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this8.$refs.crud.toggleSelection();\n      });\n    },\n    handleGrant: function handleGrant() {\n      var _this9 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.roleTreeObj = [];\n\n      if (this.selectionList.length === 1) {\n        this.roleTreeObj = this.selectionList[0].roleId.split(\",\");\n      }\n\n      getRoleTree().then(function (res) {\n        _this9.roleGrantList = res.data.data;\n        _this9.roleBox = true;\n      });\n    },\n    handleImport: function handleImport() {\n      this.excelBox = true;\n    },\n    uploadAfter: function uploadAfter(res, done, loading, column) {\n      window.console.log(column);\n      done();\n      this.excelBox = false;\n      this.refreshChange();\n    },\n    handleExport: function handleExport() {\n      var _this10 = this;\n\n      this.$confirm(\"是否导出用户数据?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        var searchForm = _this10.$refs.crud.searchForm;\n        window.open(\"/api/blade-user/export-user?blade-auth=\".concat(getToken(), \"&account=\").concat(searchForm.account, \"&realName=\").concat(searchForm.realName));\n      });\n    },\n    handleTemplate: function handleTemplate() {\n      window.open(\"/api/blade-user/export-template?blade-auth=\".concat(getToken()));\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      if ([\"edit\", \"view\"].includes(type)) {// 预留\n      }\n\n      done();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this11 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this11.page.total = data.total;\n        _this11.data = data.records;\n        _this11.loading = false;\n      });\n      getDeptTree(this.form.tenantId).then(function (res) {\n        var column = _this11.findObject(_this11.option.column, \"deptId\");\n\n        column.dicData = res.data.data;\n      });\n      getRoleTree(this.form.tenantId).then(function (res) {\n        var column = _this11.findObject(_this11.option.column, \"roleId\");\n\n        column.dicData = res.data.data;\n      });\n      getPostList(this.form.tenantId).then(function (res) {\n        var column = _this11.findObject(_this11.option.column, \"postId\");\n\n        column.dicData = res.data.data;\n      });\n    }\n  }\n};",{"version":3,"sources":["user.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA,SACA,OADA,EAEA,MAFA,EAGA,MAHA,EAIA,GAJA,EAKA,KALA,EAMA,aANA,QAOA,mBAPA;AAQA,SAAA,WAAA,QAAA,mBAAA;AACA,SAAA,WAAA,QAAA,mBAAA;AACA,SAAA,WAAA,QAAA,mBAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,OAAA,MAAA,kBAAA;AACA,SAAA,QAAA,QAAA,aAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AAAA;;AACA,QAAA,YAAA,GAAA,SAAA,YAAA,CAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,UAAA,KAAA,KAAA,EAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,OAAA,CAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA;AACA;AACA,KANA;;AAOA,QAAA,aAAA,GAAA,SAAA,aAAA,CAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,UAAA,KAAA,KAAA,EAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,SAAA,CAAA,CAAA;AACA,OAFA,MAEA,IAAA,KAAA,KAAA,KAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,YAAA,CAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA;AACA;AACA,KARA;;AASA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,QAAA,EAAA,KAHA;AAIA,MAAA,OAAA,EAAA,IAJA;AAKA,MAAA,aAAA,EAAA,EALA;AAMA,MAAA,KAAA,EAAA,EANA;AAOA,MAAA,IAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,WAAA,EAAA,CAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAPA;AAYA,MAAA,IAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA;AAFA,OAZA;AAgBA,MAAA,KAAA,EAAA;AACA,QAAA,KAAA,EAAA,OADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAhBA;AAoBA,MAAA,aAAA,EAAA,EApBA;AAqBA,MAAA,WAAA,EAAA,EArBA;AAsBA,MAAA,MAAA,EAAA;AACA,QAAA,MAAA,EAAA,MADA;AAEA,QAAA,UAAA,EAAA,EAFA;AAGA,QAAA,UAAA,EAAA,IAHA;AAIA,QAAA,cAAA,EAAA,CAJA;AAKA,QAAA,GAAA,EAAA,KALA;AAMA,QAAA,MAAA,EAAA,IANA;AAOA,QAAA,KAAA,EAAA,IAPA;AAQA,QAAA,SAAA,EAAA,IARA;AASA,QAAA,OAAA,EAAA,IATA;AAUA,QAAA,MAAA,EAAA,CACA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,SAFA;AAGA,UAAA,MAAA,EAAA,IAHA;AAIA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,QAAA,EAAA,IADA;AAEA,YAAA,OAAA,EAAA,SAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WAAA,CAJA;AASA,UAAA,IAAA,EAAA,OAAA,CAAA,UAAA,GAAA,EAAA,GAAA;AATA,SADA,EAYA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,UAFA;AAGA,UAAA,IAAA,EAAA,MAHA;AAIA,UAAA,MAAA,EAAA,iCAJA;AAKA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA,YADA;AAEA,YAAA,KAAA,EAAA;AAFA,WALA;AASA,UAAA,IAAA,EAAA,CAAA,OAAA,CAAA,UATA;AAUA,UAAA,UAAA,EAAA,OAAA,CAAA,UAVA;AAWA,UAAA,WAAA,EAAA,OAAA,CAAA,UAXA;AAYA,UAAA,WAAA,EAAA,OAAA,CAAA,UAZA;AAaA,UAAA,MAAA,EAAA,KAbA;AAcA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,QAAA,EAAA,IADA;AAEA,YAAA,OAAA,EAAA,SAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WAAA;AAdA,SAZA,EAgCA;AACA,UAAA,KAAA,EAAA,IADA;AAEA,UAAA,IAAA,EAAA,UAFA;AAGA,UAAA,IAAA,EAAA,IAHA;AAIA,UAAA,WAAA,EAAA,KAJA;AAKA,UAAA,WAAA,EAAA,KALA;AAMA,UAAA,KAAA,EAAA,CAAA;AAAA,YAAA,QAAA,EAAA,IAAA;AAAA,YAAA,SAAA,EAAA,YAAA;AAAA,YAAA,OAAA,EAAA;AAAA,WAAA;AANA,SAhCA,EAwCA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,WAFA;AAGA,UAAA,IAAA,EAAA,IAHA;AAIA,UAAA,WAAA,EAAA,KAJA;AAKA,UAAA,WAAA,EAAA,KALA;AAMA,UAAA,KAAA,EAAA,CAAA;AAAA,YAAA,QAAA,EAAA,IAAA;AAAA,YAAA,SAAA,EAAA,aAAA;AAAA,YAAA,OAAA,EAAA;AAAA,WAAA;AANA,SAxCA,EAgDA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,MAFA;AAGA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,QAAA,EAAA,IADA;AAEA,YAAA,OAAA,EAAA,SAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WAAA;AAHA,SAhDA,EAyDA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,UAFA;AAGA,UAAA,MAAA,EAAA,IAHA;AAIA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,QAAA,EAAA,IADA;AAEA,YAAA,OAAA,EAAA,SAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WAAA;AAJA,SAzDA,EAmEA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,QAFA;AAGA,UAAA,QAAA,EAAA,IAHA;AAIA,UAAA,IAAA,EAAA,MAJA;AAKA,UAAA,OAAA,EAAA,EALA;AAMA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AADA,WANA;AASA,UAAA,IAAA,EAAA,IATA;AAUA,UAAA,aAAA,EAAA,IAVA;AAWA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,QAAA,EAAA,IADA;AAEA,YAAA,OAAA,EAAA,SAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WAAA;AAXA,SAnEA,EAoFA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,QAFA;AAGA,UAAA,IAAA,EAAA,MAHA;AAIA,UAAA,QAAA,EAAA,IAJA;AAKA,UAAA,OAAA,EAAA,EALA;AAMA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AADA,WANA;AASA,UAAA,IAAA,EAAA,IATA;AAUA,UAAA,aAAA,EAAA,IAVA;AAWA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,QAAA,EAAA,IADA;AAEA,YAAA,OAAA,EAAA,SAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WAAA;AAXA,SApFA,EAqGA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,MAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SArGA,EA0GA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,QAFA;AAGA,UAAA,IAAA,EAAA,MAHA;AAIA,UAAA,QAAA,EAAA,IAJA;AAKA,UAAA,OAAA,EAAA,EALA;AAMA,UAAA,IAAA,EAAA,IANA;AAOA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA,UADA;AAEA,YAAA,KAAA,EAAA;AAFA,WAPA;AAWA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,QAAA,EAAA,IADA;AAEA,YAAA,OAAA,EAAA,SAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WAAA;AAXA,SA1GA,EA2HA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,OAFA;AAGA,UAAA,UAAA,EAAA;AAHA,SA3HA,EAgIA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,OAFA;AAGA,UAAA,IAAA,EAAA,IAHA;AAIA,UAAA,UAAA,EAAA;AAJA,SAhIA,EAsIA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,KAFA;AAGA,UAAA,IAAA,EAAA,QAHA;AAIA,UAAA,OAAA,EAAA,CACA;AACA,YAAA,KAAA,EAAA,GADA;AAEA,YAAA,KAAA,EAAA;AAFA,WADA,EAKA;AACA,YAAA,KAAA,EAAA,GADA;AAEA,YAAA,KAAA,EAAA;AAFA,WALA,EASA;AACA,YAAA,KAAA,EAAA,IADA;AAEA,YAAA,KAAA,EAAA;AAFA,WATA,CAJA;AAkBA,UAAA,IAAA,EAAA;AAlBA,SAtIA,EA0JA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,MAFA;AAGA,UAAA,IAAA,EAAA,UAHA;AAIA,UAAA,MAAA,EAAA,qBAJA;AAKA,UAAA,WAAA,EAAA,qBALA;AAMA,UAAA,IAAA,EAAA;AANA,SA1JA,EAkKA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,YAFA;AAGA,UAAA,IAAA,EAAA,IAHA;AAIA,UAAA,OAAA,EAAA;AAJA,SAlKA;AAVA,OAtBA;AA0MA,MAAA,IAAA,EAAA,EA1MA;AA2MA,MAAA,SAAA,EAAA,EA3MA;AA4MA,MAAA,WAAA,EAAA;AACA,QAAA,SAAA,EAAA,KADA;AAEA,QAAA,QAAA,EAAA,KAFA;AAGA,QAAA,MAAA,EAAA,CACA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,WAFA;AAGA,UAAA,IAAA,EAAA,QAHA;AAIA,UAAA,IAAA,EAAA,IAJA;AAKA,UAAA,QAAA,EAAA,WALA;AAMA,UAAA,IAAA,EAAA,EANA;AAOA,UAAA,SAAA,EAAA;AACA,YAAA,GAAA,EAAA;AADA,WAPA;AAUA,UAAA,GAAA,EAAA,uBAVA;AAWA,UAAA,MAAA,EAAA;AAXA,SADA,EAcA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,eAFA;AAGA,UAAA,QAAA,EAAA,IAHA;AAIA,UAAA,IAAA,EAAA;AAJA,SAdA;AAHA;AA5MA,KAAA;AAsOA,GAxPA;AAyPA,EAAA,KAAA,EAAA;AACA,mBADA,0BACA;AAAA;;AACA,UAAA,KAAA,IAAA,CAAA,QAAA,KAAA,EAAA,EAAA;AACA,QAAA,WAAA,CAAA,KAAA,IAAA,CAAA,QAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,MAAA,GAAA,MAAA,CAAA,UAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,EAAA,QAAA,CAAA;;AACA,UAAA,MAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,SAHA;AAIA,QAAA,WAAA,CAAA,KAAA,IAAA,CAAA,QAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,MAAA,GAAA,MAAA,CAAA,UAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,EAAA,QAAA,CAAA;;AACA,UAAA,MAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,SAHA;AAIA,QAAA,WAAA,CAAA,KAAA,IAAA,CAAA,QAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,MAAA,GAAA,MAAA,CAAA,UAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,EAAA,QAAA,CAAA;;AACA,UAAA,MAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,SAHA;AAIA;AACA;AAhBA,GAzPA;AA2QA,EAAA,QAAA,kCACA,UAAA,CAAA,CAAA,UAAA,EAAA,YAAA,CAAA,CADA;AAEA,IAAA,cAFA,4BAEA;AACA,aAAA;AACA,QAAA,MAAA,EAAA,KAAA,SAAA,CAAA,KAAA,UAAA,CAAA,QAAA,EAAA,KAAA,CADA;AAEA,QAAA,OAAA,EAAA,KAAA,SAAA,CAAA,KAAA,UAAA,CAAA,SAAA,EAAA,KAAA,CAFA;AAGA,QAAA,MAAA,EAAA,KAAA,SAAA,CAAA,KAAA,UAAA,CAAA,WAAA,EAAA,KAAA,CAHA;AAIA,QAAA,OAAA,EAAA,KAAA,SAAA,CAAA,KAAA,UAAA,CAAA,SAAA,EAAA,KAAA;AAJA,OAAA;AAMA,KATA;AAUA,IAAA,GAVA,iBAUA;AACA,UAAA,GAAA,GAAA,EAAA;AACA,WAAA,aAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,EAAA;AACA,OAFA;AAGA,aAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA;AAhBA,IA3QA;AA6RA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AACA,UAAA,QAAA,GAAA,KAAA,KAAA,CAAA,QAAA,CAAA,cAAA,GAAA,IAAA,CAAA,GAAA,CAAA;AACA,MAAA,KAAA,CAAA,KAAA,GAAA,EAAA,QAAA,CAAA,CAAA,IAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,KAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,OAAA,EAAA;AAFA,SAAA;;AAIA,QAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,IAAA;AACA,OAPA;AAQA,KAXA;AAYA,IAAA,OAZA,mBAYA,GAZA,EAYA,IAZA,EAYA,OAZA,EAYA;AAAA;;AACA,MAAA,GAAA,CAAA,MAAA,GAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,MAAA,GAAA,CAAA,MAAA,GAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,MAAA,GAAA,CAAA,MAAA,GAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,MAAA,GAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,YAAA;AACA,QAAA,IAAA;;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,IAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,OAAA,EAAA;AAFA,SAAA;AAIA,OAPA,EAOA,UAAA,KAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,QAAA,OAAA;AACA,OAVA;AAWA,KA3BA;AA4BA,IAAA,SA5BA,qBA4BA,GA5BA,EA4BA,KA5BA,EA4BA,IA5BA,EA4BA,OA5BA,EA4BA;AAAA;;AACA,MAAA,GAAA,CAAA,MAAA,GAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,MAAA,GAAA,CAAA,MAAA,GAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,MAAA,GAAA,CAAA,MAAA,GAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,MAAA,MAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,YAAA;AACA,QAAA,IAAA;;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,IAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,OAAA,EAAA;AAFA,SAAA;AAIA,OAPA,EAOA,UAAA,KAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,QAAA,OAAA;AACA,OAVA;AAWA,KA3CA;AA4CA,IAAA,MA5CA,kBA4CA,GA5CA,EA4CA;AAAA;;AACA,WAAA,QAAA,CAAA,YAAA,EAAA;AACA,QAAA,iBAAA,EAAA,IADA;AAEA,QAAA,gBAAA,EAAA,IAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA,EAKA,IALA,CAKA,YAAA;AACA,eAAA,MAAA,CAAA,GAAA,CAAA,EAAA,CAAA;AACA,OAPA,EAQA,IARA,CAQA,YAAA;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,IAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,OAAA,EAAA;AAFA,SAAA;AAIA,OAdA;AAeA,KA5DA;AA6DA,IAAA,WA7DA,yBA6DA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,MAAA,CAAA,KAAA,IAAA;AACA,KAhEA;AAiEA,IAAA,YAjEA,wBAiEA,MAjEA,EAiEA,IAjEA,EAiEA;AACA,WAAA,KAAA,GAAA,MAAA;AACA,WAAA,IAAA,CAAA,WAAA,GAAA,CAAA;AACA,WAAA,MAAA,CAAA,KAAA,IAAA,EAAA,MAAA;AACA,MAAA,IAAA;AACA,KAtEA;AAuEA,IAAA,eAvEA,2BAuEA,IAvEA,EAuEA;AACA,WAAA,aAAA,GAAA,IAAA;AACA,KAzEA;AA0EA,IAAA,YA1EA,0BA0EA;AAAA;;AACA,UAAA,KAAA,aAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,OAAA,CAAA,WAAA;AACA;AACA;;AACA,WAAA,QAAA,CAAA,YAAA,EAAA;AACA,QAAA,iBAAA,EAAA,IADA;AAEA,QAAA,gBAAA,EAAA,IAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA,EAKA,IALA,CAKA,YAAA;AACA,eAAA,MAAA,CAAA,MAAA,CAAA,GAAA,CAAA;AACA,OAPA,EAQA,IARA,CAQA,YAAA;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,IAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,OAAA,EAAA;AAFA,SAAA;;AAIA,QAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,eAAA;AACA,OAfA;AAgBA,KA/FA;AAgGA,IAAA,WAhGA,yBAgGA;AAAA;;AACA,UAAA,KAAA,aAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,OAAA,CAAA,WAAA;AACA;AACA;;AACA,WAAA,QAAA,CAAA,qBAAA,EAAA;AACA,QAAA,iBAAA,EAAA,IADA;AAEA,QAAA,gBAAA,EAAA,IAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA,EAKA,IALA,CAKA,YAAA;AACA,eAAA,aAAA,CAAA,MAAA,CAAA,GAAA,CAAA;AACA,OAPA,EAQA,IARA,CAQA,YAAA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,OAAA,EAAA;AAFA,SAAA;;AAIA,QAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,eAAA;AACA,OAdA;AAeA,KApHA;AAqHA,IAAA,WArHA,yBAqHA;AAAA;;AACA,UAAA,KAAA,aAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,OAAA,CAAA,WAAA;AACA;AACA;;AACA,WAAA,WAAA,GAAA,EAAA;;AACA,UAAA,KAAA,aAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,WAAA,GAAA,KAAA,aAAA,CAAA,CAAA,EAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA;;AACA,MAAA,WAAA,GAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,aAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,IAAA;AACA,OAHA;AAIA,KAlIA;AAmIA,IAAA,YAnIA,0BAmIA;AACA,WAAA,QAAA,GAAA,IAAA;AACA,KArIA;AAsIA,IAAA,WAtIA,uBAsIA,GAtIA,EAsIA,IAtIA,EAsIA,OAtIA,EAsIA,MAtIA,EAsIA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,MAAA,IAAA;AACA,WAAA,QAAA,GAAA,KAAA;AACA,WAAA,aAAA;AACA,KA3IA;AA4IA,IAAA,YA5IA,0BA4IA;AAAA;;AACA,WAAA,QAAA,CAAA,WAAA,EAAA,IAAA,EAAA;AACA,QAAA,iBAAA,EAAA,IADA;AAEA,QAAA,gBAAA,EAAA,IAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA,EAIA,IAJA,CAIA,YAAA;AACA,YAAA,UAAA,GAAA,OAAA,CAAA,KAAA,CAAA,IAAA,CAAA,UAAA;AACA,QAAA,MAAA,CAAA,IAAA,kDAAA,QAAA,EAAA,sBAAA,UAAA,CAAA,OAAA,uBAAA,UAAA,CAAA,QAAA;AACA,OAPA;AAQA,KArJA;AAsJA,IAAA,cAtJA,4BAsJA;AACA,MAAA,MAAA,CAAA,IAAA,sDAAA,QAAA,EAAA;AACA,KAxJA;AAyJA,IAAA,UAzJA,sBAyJA,IAzJA,EAyJA,IAzJA,EAyJA;AACA,UAAA,CAAA,MAAA,EAAA,MAAA,EAAA,QAAA,CAAA,IAAA,CAAA,EAAA,CACA;AACA;;AACA,MAAA,IAAA;AACA,KA9JA;AA+JA,IAAA,aA/JA,yBA+JA,WA/JA,EA+JA;AACA,WAAA,IAAA,CAAA,WAAA,GAAA,WAAA;AACA,KAjKA;AAkKA,IAAA,UAlKA,sBAkKA,QAlKA,EAkKA;AACA,WAAA,IAAA,CAAA,QAAA,GAAA,QAAA;AACA,KApKA;AAqKA,IAAA,aArKA,2BAqKA;AACA,WAAA,MAAA,CAAA,KAAA,IAAA,EAAA,KAAA,KAAA;AACA,KAvKA;AAwKA,IAAA,MAxKA,kBAwKA,IAxKA,EAwKA;AAAA;;AAAA,UAAA,MAAA,uEAAA,EAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,EAAA,IAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,EAAA,KAAA,KAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,IAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,QAAA,OAAA,CAAA,IAAA,CAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AACA,QAAA,OAAA,CAAA,IAAA,GAAA,IAAA,CAAA,OAAA;AACA,QAAA,OAAA,CAAA,OAAA,GAAA,KAAA;AACA,OALA;AAMA,MAAA,WAAA,CAAA,KAAA,IAAA,CAAA,QAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,MAAA,GAAA,OAAA,CAAA,UAAA,CAAA,OAAA,CAAA,MAAA,CAAA,MAAA,EAAA,QAAA,CAAA;;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,OAHA;AAIA,MAAA,WAAA,CAAA,KAAA,IAAA,CAAA,QAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,MAAA,GAAA,OAAA,CAAA,UAAA,CAAA,OAAA,CAAA,MAAA,CAAA,MAAA,EAAA,QAAA,CAAA;;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,OAHA;AAIA,MAAA,WAAA,CAAA,KAAA,IAAA,CAAA,QAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,MAAA,GAAA,OAAA,CAAA,UAAA,CAAA,OAAA,CAAA,MAAA,CAAA,MAAA,EAAA,QAAA,CAAA;;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,OAHA;AAIA;AA5LA;AA7RA,CAAA","sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               ref=\"crud\"\n               v-model=\"form\"\n               :permission=\"permissionList\"\n               @row-del=\"rowDel\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               :before-open=\"beforeOpen\"\n               :page=\"page\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @refresh-change=\"refreshChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   plain\n                   v-if=\"permission.user_delete\"\n                   @click=\"handleDelete\">删 除\n        </el-button>\n        <el-button type=\"info\"\n                   size=\"small\"\n                   plain\n                   v-if=\"userInfo.authority.includes('admin')\"\n                   icon=\"el-icon-user\"\n                   @click=\"handleGrant\">角色配置\n        </el-button>\n        <el-button type=\"primary\"\n                   size=\"small\"\n                   plain\n                   v-if=\"permission.user_reset\"\n                   icon=\"el-icon-refresh\"\n                   @click=\"handleReset\">密码重置\n        </el-button>\n        <el-button type=\"success\"\n                   size=\"small\"\n                   plain\n                   v-if=\"userInfo.authority.includes('admin')\"\n                   icon=\"el-icon-upload2\"\n                   @click=\"handleImport\">导入\n        </el-button>\n        <el-button type=\"warning\"\n                   size=\"small\"\n                   plain\n                   v-if=\"userInfo.authority.includes('admin')\"\n                   icon=\"el-icon-download\"\n                   @click=\"handleExport\">导出\n        </el-button>\n      </template>\n      <template slot-scope=\"{row}\"\n                slot=\"roleId\">\n        <el-tag>{{row.roleName}}</el-tag>\n      </template>\n      <template slot-scope=\"{row}\"\n                slot=\"deptId\">\n        <el-tag>{{row.deptName}}</el-tag>\n      </template>\n    </avue-crud>\n    <el-dialog title=\"用户角色配置\"\n               append-to-body\n               :visible.sync=\"roleBox\"\n               width=\"345px\">\n\n      <el-tree :data=\"roleGrantList\"\n               show-checkbox\n               default-expand-all\n               node-key=\"id\"\n               ref=\"treeRole\"\n               :default-checked-keys=\"roleTreeObj\"\n               :props=\"props\">\n      </el-tree>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"roleBox = false\">取 消</el-button>\n            <el-button type=\"primary\"\n                       @click=\"submitRole\">确 定</el-button>\n          </span>\n    </el-dialog>\n    <el-dialog title=\"用户数据导入\"\n               append-to-body\n               :visible.sync=\"excelBox\"\n               width=\"555px\">\n      <avue-form :option=\"excelOption\" v-model=\"excelForm\" :upload-after=\"uploadAfter\">\n        <template slot=\"excelTemplate\">\n          <el-button type=\"primary\" @click=\"handleTemplate()\">\n            点击下载<i class=\"el-icon-download el-icon--right\"></i>\n          </el-button>\n        </template>\n      </avue-form>\n    </el-dialog>\n  </basic-container>\n</template>\n\n<script>\n  import {\n    getList,\n    remove,\n    update,\n    add,\n    grant,\n    resetPassword\n  } from \"@/api/system/user\";\n  import {getDeptTree} from \"@/api/system/dept\";\n  import {getRoleTree} from \"@/api/system/role\";\n  import {getPostList} from \"@/api/system/post\";\n  import {mapGetters} from \"vuex\";\n  import website from '@/config/website';\n  import {getToken} from '@/util/auth';\n\n  export default {\n    data() {\n      const validatePass = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请输入密码'));\n        } else {\n          callback();\n        }\n      };\n      const validatePass2 = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请再次输入密码'));\n        } else if (value !== this.form.password) {\n          callback(new Error('两次输入密码不一致!'));\n        } else {\n          callback();\n        }\n      };\n      return {\n        form: {},\n        roleBox: false,\n        excelBox: false,\n        loading: true,\n        selectionList: [],\n        query: {},\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        init: {\n          roleTree: [],\n          deptTree: [],\n        },\n        props: {\n          label: \"title\",\n          value: \"key\"\n        },\n        roleGrantList: [],\n        roleTreeObj: [],\n        option: {\n          height: 'auto',\n          calcHeight: 80,\n          searchShow: true,\n          searchMenuSpan: 6,\n          tip: false,\n          border: true,\n          index: true,\n          selection: true,\n          viewBtn: true,\n          column: [\n            {\n              label: \"登录账号\",\n              prop: \"account\",\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入登录账号\",\n                trigger: \"blur\"\n              }],\n              span: website.tenantMode ? 12 : 24,\n            },\n            {\n              label: \"所属租户\",\n              prop: \"tenantId\",\n              type: \"tree\",\n              dicUrl: \"/api/blade-system/tenant/select\",\n              props: {\n                label: \"tenantName\",\n                value: \"tenantId\"\n              },\n              hide: !website.tenantMode,\n              addDisplay: website.tenantMode,\n              editDisplay: website.tenantMode,\n              viewDisplay: website.tenantMode,\n              search: false,\n              rules: [{\n                required: true,\n                message: \"请输入所属租户\",\n                trigger: \"click\"\n              }]\n            },\n            {\n              label: '密码',\n              prop: 'password',\n              hide: true,\n              editDisplay: false,\n              viewDisplay: false,\n              rules: [{required: true, validator: validatePass, trigger: 'blur'}]\n            },\n            {\n              label: '确认密码',\n              prop: 'password2',\n              hide: true,\n              editDisplay: false,\n              viewDisplay: false,\n              rules: [{required: true, validator: validatePass2, trigger: 'blur'}]\n            },\n            {\n              label: \"用户昵称\",\n              prop: \"name\",\n              rules: [{\n                required: true,\n                message: \"请输入用户昵称\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"用户姓名\",\n              prop: \"realName\",\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入用户姓名\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"所属角色\",\n              prop: \"roleId\",\n              multiple: true,\n              type: \"tree\",\n              dicData: [],\n              props: {\n                label: \"title\"\n              },\n              slot: true,\n              checkStrictly: true,\n              rules: [{\n                required: true,\n                message: \"请选择所属角色\",\n                trigger: \"click\"\n              }]\n            },\n            {\n              label: \"所属部门\",\n              prop: \"deptId\",\n              type: \"tree\",\n              multiple: true,\n              dicData: [],\n              props: {\n                label: \"title\"\n              },\n              slot: true,\n              checkStrictly: true,\n              rules: [{\n                required: true,\n                message: \"请选择所属部门\",\n                trigger: \"click\"\n              }]\n            },\n            {\n              label: \"用户编号\",\n              prop: \"code\",\n              hide: true,\n            },\n            {\n              label: \"所属岗位\",\n              prop: \"postId\",\n              type: \"tree\",\n              multiple: true,\n              dicData: [],\n              hide: true,\n              props: {\n                label: \"postName\",\n                value: \"id\"\n              },\n              rules: [{\n                required: true,\n                message: \"请选择所属岗位\",\n                trigger: \"click\"\n              }],\n            },\n            {\n              label: \"手机号码\",\n              prop: \"phone\",\n              overHidden: true\n            },\n            {\n              label: \"电子邮箱\",\n              prop: \"email\",\n              hide: true,\n              overHidden: true\n            },\n            {\n              label: \"用户性别\",\n              prop: \"sex\",\n              type: \"select\",\n              dicData: [\n                {\n                  label: \"男\",\n                  value: 1\n                },\n                {\n                  label: \"女\",\n                  value: 2\n                },\n                {\n                  label: \"未知\",\n                  value: 3\n                }\n              ],\n              hide: true\n            },\n            {\n              label: \"用户生日\",\n              type: \"date\",\n              prop: \"birthday\",\n              format: \"yyyy-MM-dd hh:mm:ss\",\n              valueFormat: \"yyyy-MM-dd hh:mm:ss\",\n              hide: true\n            },\n            {\n              label: \"账号状态\",\n              prop: \"statusName\",\n              hide: true,\n              display: false\n            }\n          ]\n        },\n        data: [],\n        excelForm: {},\n        excelOption: {\n          submitBtn: false,\n          emptyBtn: false,\n          column: [\n            {\n              label: '模板上传',\n              prop: 'excelFile',\n              type: 'upload',\n              drag: true,\n              loadText: '模板上传中，请稍等',\n              span: 24,\n              propsHttp: {\n                res: 'data'\n              },\n              tip: '请上传 .xls,.xlsx 标准格式文件',\n              action: \"/api/blade-user/import-user\"\n            },\n            {\n              label: '模板下载',\n              prop: 'excelTemplate',\n              formslot: true,\n              span: 24,\n            }\n          ]\n        }\n      };\n    },\n    watch: {\n      'form.tenantId'() {\n        if (this.form.tenantId !== '') {\n          getDeptTree(this.form.tenantId).then(res => {\n            const column = this.findObject(this.option.column, \"deptId\");\n            column.dicData = res.data.data;\n          });\n          getRoleTree(this.form.tenantId).then(res => {\n            const column = this.findObject(this.option.column, \"roleId\");\n            column.dicData = res.data.data;\n          });\n          getPostList(this.form.tenantId).then(res => {\n            const column = this.findObject(this.option.column, \"postId\");\n            column.dicData = res.data.data;\n          });\n        }\n      },\n    },\n    computed: {\n      ...mapGetters([\"userInfo\", \"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.user_add, false),\n          viewBtn: this.vaildData(this.permission.user_view, false),\n          delBtn: this.vaildData(this.permission.user_delete, false),\n          editBtn: this.vaildData(this.permission.user_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      },\n    },\n    methods: {\n      submitRole() {\n        const roleList = this.$refs.treeRole.getCheckedKeys().join(\",\");\n        grant(this.ids, roleList).then(() => {\n          this.roleBox = false;\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.onLoad(this.page);\n        });\n      },\n      rowSave(row, done, loading) {\n        row.deptId = row.deptId.join(\",\");\n        row.roleId = row.roleId.join(\",\");\n        row.postId = row.postId.join(\",\");\n        add(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        row.deptId = row.deptId.join(\",\");\n        row.roleId = row.roleId.join(\",\");\n        row.postId = row.postId.join(\",\");\n        update(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      handleReset() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择账号密码重置为123456?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return resetPassword(this.ids);\n          })\n          .then(() => {\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      handleGrant() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.roleTreeObj = [];\n        if (this.selectionList.length === 1) {\n          this.roleTreeObj = this.selectionList[0].roleId.split(\",\");\n        }\n        getRoleTree().then(res => {\n          this.roleGrantList = res.data.data;\n          this.roleBox = true;\n        });\n      },\n      handleImport() {\n        this.excelBox = true;\n      },\n      uploadAfter(res, done, loading, column) {\n        window.console.log(column);\n        done();\n        this.excelBox = false;\n        this.refreshChange();\n      },\n      handleExport() {\n        this.$confirm(\"是否导出用户数据?\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(() => {\n          const searchForm = this.$refs.crud.searchForm;\n          window.open(`/api/blade-user/export-user?blade-auth=${getToken()}&account=${searchForm.account}&realName=${searchForm.realName}`);\n        });\n      },\n      handleTemplate() {\n        window.open(`/api/blade-user/export-template?blade-auth=${getToken()}`);\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          // 预留\n        }\n        done();\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoad(this.page, this.query);\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n        });\n        getDeptTree(this.form.tenantId).then(res => {\n          const column = this.findObject(this.option.column, \"deptId\");\n          column.dicData = res.data.data;\n        });\n        getRoleTree(this.form.tenantId).then(res => {\n          const column = this.findObject(this.option.column, \"roleId\");\n          column.dicData = res.data.data;\n        });\n        getPostList(this.form.tenantId).then(res => {\n          const column = this.findObject(this.option.column, \"postId\");\n          column.dicData = res.data.data;\n        });\n      }\n    }\n  };\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/views/system"}]}