{"remainingRequest":"/Volumes/Workzone/Saber/node_modules/babel-loader/lib/index.js!/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Workzone/Saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Workzone/Saber/src/page/logs/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Workzone/Saber/src/page/logs/index.vue","mtime":1590478366886},{"path":"/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js","mtime":1590478895012},{"path":"/Volumes/Workzone/Saber/node_modules/babel-loader/lib/index.js","mtime":1590478873019},{"path":"/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js","mtime":1590478895012},{"path":"/Volumes/Workzone/Saber/node_modules/vue-loader/lib/index.js","mtime":1590478898888}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Volumes/Workzone/Saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"errLogs\",\n  data: function data() {\n    return {\n      option: {\n        menu: false,\n        addBtn: false,\n        page: false,\n        border: true,\n        expand: true,\n        refreshBtn: false,\n        headerAlign: \"center\",\n        column: [{\n          label: \"类型\",\n          prop: \"type\",\n          width: 80,\n          align: \"center\",\n          solt: true,\n          dicData: [{\n            label: \"bug\",\n            value: \"error\"\n          }]\n        }, {\n          label: \"地址\",\n          width: 200,\n          prop: \"url\",\n          overHidden: true\n        }, {\n          label: \"内容\",\n          prop: \"message\",\n          overHidden: true\n        }, {\n          label: \"错误堆栈\",\n          prop: \"stack\",\n          hide: true\n        }, {\n          label: \"时间\",\n          align: \"center\",\n          prop: \"time\",\n          width: 200\n        }]\n      }\n    };\n  },\n  created: function created() {},\n  mounted: function mounted() {},\n  computed: _objectSpread({}, mapGetters([\"logsList\"])),\n  props: [],\n  methods: {\n    send: function send() {\n      var _this = this;\n\n      this.$confirm(\"确定上传本地日志到服务器?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this.$store.dispatch(\"SendLogs\").then(function () {\n          _this.$parent.$parent.box = false;\n\n          _this.$message({\n            type: \"success\",\n            message: \"发送成功!\"\n          });\n        });\n      }).catch(function () {});\n    },\n    clear: function clear() {\n      var _this2 = this;\n\n      this.$confirm(\"确定清空本地日志记录?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this2.$store.commit(\"CLEAR_LOGS\");\n\n        console.log(_this2);\n        _this2.$parent.$parent.box = false;\n\n        _this2.$message({\n          type: \"success\",\n          message: \"清空成功!\"\n        });\n      }).catch(function () {});\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <avue-crud :data=\"logsList\"\n             :option=\"option\">\n    <template slot=\"menuLeft\">\n      <el-button type=\"primary\"\n                 size=\"small\"\n                 icon=\"el-icon-upload\"\n                 @click=\"send\">上传服务器</el-button>\n      <el-button type=\"danger\"\n                 size=\"small\"\n                 icon=\"el-icon-delete\"\n                 @click=\"clear\">清空本地日志</el-button>\n    </template>\n    <template slot-scope=\"scope\"\n              slot=\"type\">\n      <el-tag type=\"danger\"\n              size=\"small\">{{scope.label}}</el-tag>\n    </template>\n    <template slot-scope=\"props\"\n              slot=\"expand\">\n      <pre class=\"code\">\n        {{props.row.stack}}\n      </pre>\n    </template>\n  </avue-crud>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"errLogs\",\n  data() {\n    return {\n      option: {\n        menu: false,\n        addBtn: false,\n        page: false,\n        border: true,\n        expand: true,\n        refreshBtn: false,\n        headerAlign: \"center\",\n        column: [\n          {\n            label: \"类型\",\n            prop: \"type\",\n            width: 80,\n            align: \"center\",\n            solt: true,\n            dicData: [\n              {\n                label: \"bug\",\n                value: \"error\"\n              }\n            ]\n          },\n          {\n            label: \"地址\",\n            width: 200,\n            prop: \"url\",\n            overHidden: true\n          },\n          {\n            label: \"内容\",\n            prop: \"message\",\n            overHidden: true\n          },\n          {\n            label: \"错误堆栈\",\n            prop: \"stack\",\n            hide: true\n          },\n          {\n            label: \"时间\",\n            align: \"center\",\n            prop: \"time\",\n            width: 200\n          }\n        ]\n      }\n    };\n  },\n  created() {},\n  mounted() {},\n  computed: {\n    ...mapGetters([\"logsList\"])\n  },\n  props: [],\n  methods: {\n    send() {\n      this.$confirm(\"确定上传本地日志到服务器?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          this.$store.dispatch(\"SendLogs\").then(() => {\n            this.$parent.$parent.box = false;\n            this.$message({\n              type: \"success\",\n              message: \"发送成功!\"\n            });\n          });\n        })\n        .catch(() => {});\n    },\n    clear() {\n      this.$confirm(\"确定清空本地日志记录?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          this.$store.commit(\"CLEAR_LOGS\");\n          console.log(this);\n          this.$parent.$parent.box = false;\n          this.$message({\n            type: \"success\",\n            message: \"清空成功!\"\n          });\n        })\n        .catch(() => {});\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.code {\n  font-size: 12px;\n  display: block;\n  font-family: monospace;\n  white-space: pre;\n  margin: 1em 0px;\n}\n</style>\n"],"sourceRoot":"src/page/logs"}]}