{"remainingRequest":"/Volumes/Workzone/Saber/node_modules/babel-loader/lib/index.js!/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Workzone/Saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Workzone/Saber/src/views/system/role.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Workzone/Saber/src/views/system/role.vue","mtime":1590478366896},{"path":"/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js","mtime":1590478895012},{"path":"/Volumes/Workzone/Saber/node_modules/babel-loader/lib/index.js","mtime":1590478873019},{"path":"/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js","mtime":1590478895012},{"path":"/Volumes/Workzone/Saber/node_modules/vue-loader/lib/index.js","mtime":1590478898888}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Volumes/Workzone/Saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { add, getList, getRole, getRoleTree, grant, grantTree, remove, update } from \"@/api/system/role\";\nimport { mapGetters } from \"vuex\";\nimport website from '@/config/website';\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      box: false,\n      props: {\n        label: \"title\",\n        value: \"key\"\n      },\n      list: [],\n      defaultObj: [],\n      selectionList: [],\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      option: {\n        height: 'auto',\n        calcHeight: 80,\n        searchShow: true,\n        searchMenuSpan: 6,\n        tip: false,\n        tree: true,\n        border: true,\n        index: true,\n        selection: true,\n        viewBtn: true,\n        column: [{\n          label: \"角色名称\",\n          prop: \"roleName\",\n          search: true,\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入角色名称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"所属租户\",\n          prop: \"tenantId\",\n          type: \"tree\",\n          dicUrl: \"/api/blade-system/tenant/select\",\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: website.tenantMode,\n          span: 24,\n          props: {\n            label: \"tenantName\",\n            value: \"tenantId\"\n          },\n          hide: !website.tenantMode,\n          search: website.tenantMode,\n          rules: [{\n            required: true,\n            message: \"请输入所属租户\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: \"角色别名\",\n          prop: \"roleAlias\",\n          search: true,\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入角色别名\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"上级角色\",\n          prop: \"parentId\",\n          dicData: [],\n          type: \"tree\",\n          hide: true,\n          span: 24,\n          props: {\n            label: \"title\"\n          },\n          rules: [{\n            required: false,\n            message: \"请选择上级角色\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: \"角色排序\",\n          prop: \"sort\",\n          type: \"number\",\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入角色排序\",\n            trigger: \"blur\"\n          }]\n        }]\n      },\n      data: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.role_add, false),\n        viewBtn: this.vaildData(this.permission.role_view, false),\n        delBtn: this.vaildData(this.permission.role_delete, false),\n        editBtn: this.vaildData(this.permission.role_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    submit: function submit() {\n      var _this = this;\n\n      var menuLIst = this.$refs.tree.getCheckedKeys().join(\",\");\n      grant(this.ids, menuLIst).then(function () {\n        _this.box = false;\n\n        _this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this.onLoad(_this.page);\n      });\n    },\n    rowSave: function rowSave(row, done, loading) {\n      var _this2 = this;\n\n      add(row).then(function () {\n        done();\n\n        _this2.onLoad(_this2.page);\n\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this3 = this;\n\n      update(row).then(function () {\n        done();\n\n        _this3.onLoad(_this3.page);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this4 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this4.onLoad(_this4.page);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    handleRole: function handleRole() {\n      var _this5 = this;\n\n      if (this.selectionList.length !== 1) {\n        this.$message.warning(\"只能选择一条数据\");\n        return;\n      }\n\n      this.defaultObj = [];\n      grantTree().then(function (res) {\n        _this5.list = res.data.data;\n        return getRole(_this5.ids);\n      }).then(function (res) {\n        _this5.defaultObj = res.data.data;\n        _this5.box = true;\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this6 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this6.ids);\n      }).then(function () {\n        _this6.onLoad(_this6.page);\n\n        _this6.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this6.$refs.crud.toggleSelection();\n      });\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad: function onLoad(page) {\n      var _this7 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        _this7.data = res.data.data;\n        _this7.loading = false;\n        getRoleTree().then(function (res) {\n          var column = _this7.findObject(_this7.option.column, \"parentId\");\n\n          column.dicData = res.data.data;\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["role.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               ref=\"crud\"\n               v-model=\"form\"\n               :permission=\"permissionList\"\n               @row-del=\"rowDel\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   v-if=\"permission.role_delete\"\n                   plain\n                   @click=\"handleDelete\">删 除\n        </el-button>\n        <el-button size=\"small\"\n                   icon=\"el-icon-delete\"\n                   @click=\"handleRole\"\n                   plain>权限设置\n        </el-button>\n      </template>\n    </avue-crud>\n    <el-dialog title=\"角色配置\"\n               :visible.sync=\"box\"\n               width=\"20%\">\n      <el-tree :data=\"list\"\n               show-checkbox\n               node-key=\"id\"\n               ref=\"tree\"\n               :default-checked-keys=\"defaultObj\"\n               :props=\"props\">\n      </el-tree>\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button @click=\"box = false\">取 消</el-button>\n        <el-button type=\"primary\"\n                   @click=\"submit\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </basic-container>\n</template>\n\n<script>\n  import {add, getList, getRole, getRoleTree, grant, grantTree, remove, update} from \"@/api/system/role\";\n  import {mapGetters} from \"vuex\";\n  import website from '@/config/website';\n\n  export default {\n    data() {\n      return {\n        form: {},\n        box: false,\n        props: {\n          label: \"title\",\n          value: \"key\"\n        },\n        list: [],\n        defaultObj: [],\n        selectionList: [],\n        query: {},\n        loading: true,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        option: {\n          height: 'auto',\n          calcHeight: 80,\n          searchShow: true,\n          searchMenuSpan: 6,\n          tip: false,\n          tree: true,\n          border: true,\n          index: true,\n          selection: true,\n          viewBtn: true,\n          column: [\n            {\n              label: \"角色名称\",\n              prop: \"roleName\",\n              search: true,\n              span: 24,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入角色名称\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"所属租户\",\n              prop: \"tenantId\",\n              type: \"tree\",\n              dicUrl: \"/api/blade-system/tenant/select\",\n              addDisplay: false,\n              editDisplay: false,\n              viewDisplay: website.tenantMode,\n              span: 24,\n              props: {\n                label: \"tenantName\",\n                value: \"tenantId\"\n              },\n              hide: !website.tenantMode,\n              search: website.tenantMode,\n              rules: [{\n                required: true,\n                message: \"请输入所属租户\",\n                trigger: \"click\"\n              }]\n            },\n            {\n              label: \"角色别名\",\n              prop: \"roleAlias\",\n              search: true,\n              span: 24,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入角色别名\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"上级角色\",\n              prop: \"parentId\",\n              dicData: [],\n              type: \"tree\",\n              hide: true,\n              span: 24,\n              props: {\n                label: \"title\"\n              },\n              rules: [\n                {\n                  required: false,\n                  message: \"请选择上级角色\",\n                  trigger: \"click\"\n                }\n              ]\n            },\n            {\n              label: \"角色排序\",\n              prop: \"sort\",\n              type: \"number\",\n              span: 24,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入角色排序\",\n                  trigger: \"blur\"\n                }\n              ]\n            }\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.role_add, false),\n          viewBtn: this.vaildData(this.permission.role_view, false),\n          delBtn: this.vaildData(this.permission.role_delete, false),\n          editBtn: this.vaildData(this.permission.role_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      submit() {\n        const menuLIst = this.$refs.tree.getCheckedKeys().join(\",\");\n        grant(this.ids, menuLIst).then(() => {\n          this.box = false;\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.onLoad(this.page);\n        });\n      },\n      rowSave(row, done, loading) {\n        add(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      handleRole() {\n        if (this.selectionList.length !== 1) {\n          this.$message.warning(\"只能选择一条数据\");\n          return;\n        }\n        this.defaultObj = [];\n        grantTree()\n          .then(res => {\n            this.list = res.data.data;\n            return getRole(this.ids);\n          })\n          .then(res => {\n            this.defaultObj = res.data.data;\n            this.box = true;\n          });\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          this.data = res.data.data;\n          this.loading = false;\n          getRoleTree().then(res => {\n            const column = this.findObject(this.option.column, \"parentId\");\n            column.dicData = res.data.data;\n          });\n        });\n      }\n    }\n  };\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/views/system"}]}