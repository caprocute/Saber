{"remainingRequest":"/Volumes/Workzone/Saber/node_modules/babel-loader/lib/index.js!/Volumes/Workzone/Saber/node_modules/eslint-loader/index.js??ref--13-0!/Volumes/Workzone/Saber/src/store/modules/tags.js","dependencies":[{"path":"/Volumes/Workzone/Saber/src/store/modules/tags.js","mtime":1590478366888},{"path":"/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js","mtime":1590478895012},{"path":"/Volumes/Workzone/Saber/node_modules/babel-loader/lib/index.js","mtime":1590478873019},{"path":"/Volumes/Workzone/Saber/node_modules/eslint-loader/index.js","mtime":1590478888364}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport { setStore, getStore } from '@/util/store';\nimport { diff } from '@/util/util';\nimport website from '@/config/website';\nvar isFirstPage = website.isFirstPage;\nvar tagWel = website.fistPage;\nvar tagObj = {\n  label: '',\n  //标题名称\n  value: '',\n  //标题的路径\n  params: '',\n  //标题的路径参数\n  query: '',\n  //标题的参数\n  meta: {},\n  //额外参数\n  group: [] //分组\n\n}; //处理首个标签\n\nfunction setFistTag(list) {\n  if (list.length == 1) {\n    list[0].close = false;\n  } else {\n    list.forEach(function (ele) {\n      if (ele.value === tagWel.value && isFirstPage === false) {\n        ele.close = false;\n      } else {\n        ele.close = true;\n      }\n    });\n  }\n}\n\nvar navs = {\n  state: {\n    tagList: getStore({\n      name: 'tagList'\n    }) || [],\n    tag: getStore({\n      name: 'tag'\n    }) || tagObj,\n    tagWel: tagWel\n  },\n  actions: {},\n  mutations: {\n    ADD_TAG: function ADD_TAG(state, action) {\n      state.tag = action;\n      setStore({\n        name: 'tag',\n        content: state.tag,\n        type: 'session'\n      });\n      if (state.tagList.some(function (ele) {\n        return diff(ele, action);\n      })) return;\n      state.tagList.push(action);\n      setFistTag(state.tagList);\n      setStore({\n        name: 'tagList',\n        content: state.tagList,\n        type: 'session'\n      });\n    },\n    DEL_TAG: function DEL_TAG(state, action) {\n      state.tagList = state.tagList.filter(function (item) {\n        return !diff(item, action);\n      });\n      setFistTag(state.tagList);\n      setStore({\n        name: 'tagList',\n        content: state.tagList,\n        type: 'session'\n      });\n    },\n    DEL_ALL_TAG: function DEL_ALL_TAG(state) {\n      state.tagList = [state.tagWel];\n      setStore({\n        name: 'tagList',\n        content: state.tagList,\n        type: 'session'\n      });\n    },\n    DEL_TAG_OTHER: function DEL_TAG_OTHER(state) {\n      state.tagList = state.tagList.filter(function (item) {\n        if (item.value === state.tag.value) {\n          return true;\n        } else if (!website.isFirstPage && item.value === website.fistPage.value) {\n          return true;\n        }\n      });\n      setFistTag(state.tagList);\n      setStore({\n        name: 'tagList',\n        content: state.tagList,\n        type: 'session'\n      });\n    }\n  }\n};\nexport default navs;",{"version":3,"sources":["/Volumes/Workzone/Saber/src/store/modules/tags.js"],"names":["setStore","getStore","diff","website","isFirstPage","tagWel","fistPage","tagObj","label","value","params","query","meta","group","setFistTag","list","length","close","forEach","ele","navs","state","tagList","name","tag","actions","mutations","ADD_TAG","action","content","type","some","push","DEL_TAG","filter","item","DEL_ALL_TAG","DEL_TAG_OTHER"],"mappings":"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","sourcesContent":["import { setStore, getStore } from '@/util/store'\nimport { diff } from '@/util/util'\nimport website from '@/config/website'\nconst isFirstPage = website.isFirstPage;\nconst tagWel = website.fistPage;\nconst tagObj = {\n    label: '', //标题名称\n    value: '', //标题的路径\n    params: '', //标题的路径参数\n    query: '', //标题的参数\n    meta: {},//额外参数\n    group: [], //分组\n}\n//处理首个标签\nfunction setFistTag(list) {\n    if (list.length == 1) {\n        list[0].close = false;\n    } else {\n        list.forEach(ele => {\n            if (ele.value === tagWel.value && isFirstPage === false) {\n                ele.close = false\n            } else {\n                ele.close = true\n            }\n        })\n    }\n}\n\n\nconst navs = {\n    state: {\n        tagList: getStore({ name: 'tagList' }) || [],\n        tag: getStore({ name: 'tag' }) || tagObj,\n        tagWel: tagWel\n    },\n    actions: {\n\n    },\n    mutations: {\n        ADD_TAG: (state, action) => {\n            state.tag = action;\n            setStore({ name: 'tag', content: state.tag, type: 'session' })\n            if (state.tagList.some(ele => diff(ele, action))) return\n            state.tagList.push(action)\n            setFistTag(state.tagList);\n            setStore({ name: 'tagList', content: state.tagList, type: 'session' })\n        },\n        DEL_TAG: (state, action) => {\n            state.tagList = state.tagList.filter(item => {\n                return !diff(item, action);\n            })\n            setFistTag(state.tagList);\n            setStore({ name: 'tagList', content: state.tagList, type: 'session' })\n        },\n        DEL_ALL_TAG: (state) => {\n            state.tagList = [state.tagWel];\n            setStore({ name: 'tagList', content: state.tagList, type: 'session' })\n        },\n        DEL_TAG_OTHER: (state) => {\n            state.tagList = state.tagList.filter(item => {\n                if (item.value === state.tag.value) {\n                    return true;\n                } else if (!website.isFirstPage && item.value === website.fistPage.value) {\n                    return true;\n                }\n            })\n            setFistTag(state.tagList);\n            setStore({ name: 'tagList', content: state.tagList, type: 'session' })\n        },\n    }\n}\nexport default navs"]}]}