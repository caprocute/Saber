{"remainingRequest":"/Volumes/Workzone/Saber/node_modules/babel-loader/lib/index.js!/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Workzone/Saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Workzone/Saber/src/page/login/codelogin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Workzone/Saber/src/page/login/codelogin.vue","mtime":1590478366885},{"path":"/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js","mtime":1590478895012},{"path":"/Volumes/Workzone/Saber/node_modules/babel-loader/lib/index.js","mtime":1590478873019},{"path":"/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js","mtime":1590478895012},{"path":"/Volumes/Workzone/Saber/node_modules/vue-loader/lib/index.js","mtime":1590478898888}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Volumes/Workzone/Saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { isvalidatemobile } from \"@/util/validate\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"codelogin\",\n  data: function data() {\n    var validatePhone = function validatePhone(rule, value, callback) {\n      if (isvalidatemobile(value)[0]) {\n        callback(new Error(isvalidatemobile(value)[1]));\n      } else {\n        callback();\n      }\n    };\n\n    var validateCode = function validateCode(rule, value, callback) {\n      if (value.length != 4) {\n        callback(new Error(\"请输入4位数的验证码\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      msgText: \"\",\n      msgTime: \"\",\n      msgKey: false,\n      loginForm: {\n        phone: \"\",\n        code: \"\"\n      },\n      loginRules: {\n        phone: [{\n          required: true,\n          trigger: \"blur\",\n          validator: validatePhone\n        }],\n        code: [{\n          required: true,\n          trigger: \"blur\",\n          validator: validateCode\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.msgText = this.config.MSGINIT;\n    this.msgTime = this.config.MSGTIME;\n  },\n  mounted: function mounted() {},\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"tagWel\"])), {}, {\n    config: function config() {\n      return {\n        MSGINIT: this.$t(\"login.msgText\"),\n        MSGSCUCCESS: this.$t(\"login.msgSuccess\"),\n        MSGTIME: 60\n      };\n    }\n  }),\n  props: [],\n  methods: {\n    handleSend: function handleSend() {\n      var _this = this;\n\n      if (this.msgKey) return;\n      this.msgText = this.msgTime + this.config.MSGSCUCCESS;\n      this.msgKey = true;\n      var time = setInterval(function () {\n        _this.msgTime--;\n        _this.msgText = _this.msgTime + _this.config.MSGSCUCCESS;\n\n        if (_this.msgTime == 0) {\n          _this.msgTime = _this.config.MSGTIME;\n          _this.msgText = _this.config.MSGINIT;\n          _this.msgKey = false;\n          clearInterval(time);\n        }\n      }, 1000);\n    },\n    handleLogin: function handleLogin() {\n      var _this2 = this;\n\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this2.$store.dispatch(\"LoginByPhone\", _this2.loginForm).then(function () {\n            _this2.$router.push({\n              path: _this2.tagWel.value\n            });\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["codelogin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <el-form class=\"login-form\"\n           status-icon\n           :rules=\"loginRules\"\n           ref=\"loginForm\"\n           :model=\"loginForm\"\n           label-width=\"0\">\n    <el-form-item prop=\"phone\">\n      <el-input size=\"small\"\n                @keyup.enter.native=\"handleLogin\"\n                v-model=\"loginForm.phone\"\n                auto-complete=\"off\"\n                :placeholder=\"$t('login.phone')\">\n        <i slot=\"prefix\"\n           class=\"icon-shouji\"></i>\n      </el-input>\n    </el-form-item>\n    <el-form-item prop=\"code\">\n      <el-input size=\"small\"\n                @keyup.enter.native=\"handleLogin\"\n                v-model=\"loginForm.code\"\n                auto-complete=\"off\"\n                :placeholder=\"$t('login.code')\">\n        <i slot=\"prefix\"\n           class=\"icon-yanzhengma\"\n           style=\"margin-top:6px;\"></i>\n        <template slot=\"append\">\n          <span @click=\"handleSend\"\n                class=\"msg-text\"\n                :class=\"[{display:msgKey}]\">{{msgText}}</span>\n        </template>\n      </el-input>\n    </el-form-item>\n    <el-form-item>\n      <el-button size=\"small\"\n                 type=\"primary\"\n                 @click.native.prevent=\"handleLogin\"\n                 class=\"login-submit\">{{$t('login.submit')}}</el-button>\n    </el-form-item>\n  </el-form>\n</template>\n\n<script>\nimport { isvalidatemobile } from \"@/util/validate\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"codelogin\",\n  data() {\n    const validatePhone = (rule, value, callback) => {\n      if (isvalidatemobile(value)[0]) {\n        callback(new Error(isvalidatemobile(value)[1]));\n      } else {\n        callback();\n      }\n    };\n    const validateCode = (rule, value, callback) => {\n      if (value.length != 4) {\n        callback(new Error(\"请输入4位数的验证码\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      msgText: \"\",\n      msgTime: \"\",\n      msgKey: false,\n      loginForm: {\n        phone: \"\",\n        code: \"\"\n      },\n      loginRules: {\n        phone: [{ required: true, trigger: \"blur\", validator: validatePhone }],\n        code: [{ required: true, trigger: \"blur\", validator: validateCode }]\n      }\n    };\n  },\n  created() {\n    this.msgText = this.config.MSGINIT;\n    this.msgTime = this.config.MSGTIME;\n  },\n  mounted() {},\n  computed: {\n    ...mapGetters([\"tagWel\"]),\n    config() {\n      return {\n        MSGINIT: this.$t(\"login.msgText\"),\n        MSGSCUCCESS: this.$t(\"login.msgSuccess\"),\n        MSGTIME: 60\n      };\n    }\n  },\n  props: [],\n  methods: {\n    handleSend() {\n      if (this.msgKey) return;\n      this.msgText = this.msgTime + this.config.MSGSCUCCESS;\n      this.msgKey = true;\n      const time = setInterval(() => {\n        this.msgTime--;\n        this.msgText = this.msgTime + this.config.MSGSCUCCESS;\n        if (this.msgTime == 0) {\n          this.msgTime = this.config.MSGTIME;\n          this.msgText = this.config.MSGINIT;\n          this.msgKey = false;\n          clearInterval(time);\n        }\n      }, 1000);\n    },\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.$store.dispatch(\"LoginByPhone\", this.loginForm).then(() => {\n            this.$router.push({ path: this.tagWel.value });\n          });\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style>\n.msg-text {\n  display: block;\n  width: 60px;\n  font-size: 12px;\n  text-align: center;\n  cursor: pointer;\n}\n.msg-text.display {\n  color: #ccc;\n}\n</style>\n"],"sourceRoot":"src/page/login"}]}