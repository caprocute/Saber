{"remainingRequest":"/Volumes/Workzone/Saber/node_modules/babel-loader/lib/index.js!/Volumes/Workzone/Saber/node_modules/eslint-loader/index.js??ref--13-0!/Volumes/Workzone/Saber/src/api/system/role.js","dependencies":[{"path":"/Volumes/Workzone/Saber/src/api/system/role.js","mtime":1590478366875},{"path":"/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js","mtime":1590478895012},{"path":"/Volumes/Workzone/Saber/node_modules/babel-loader/lib/index.js","mtime":1590478873019},{"path":"/Volumes/Workzone/Saber/node_modules/eslint-loader/index.js","mtime":1590478888364}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Volumes/Workzone/Saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport request from '@/router/axios';\nexport var getList = function getList(current, size, params) {\n  return request({\n    url: '/api/blade-system/role/list',\n    method: 'get',\n    params: _objectSpread(_objectSpread({}, params), {}, {\n      current: current,\n      size: size\n    })\n  });\n};\nexport var grantTree = function grantTree() {\n  return request({\n    url: '/api/blade-system/menu/grant-tree',\n    method: 'get'\n  });\n};\nexport var grant = function grant(roleIds, menuIds) {\n  return request({\n    url: '/api/blade-system/role/grant',\n    method: 'post',\n    params: {\n      roleIds: roleIds,\n      menuIds: menuIds\n    }\n  });\n};\nexport var remove = function remove(ids) {\n  return request({\n    url: '/api/blade-system/role/remove',\n    method: 'post',\n    params: {\n      ids: ids\n    }\n  });\n};\nexport var add = function add(row) {\n  return request({\n    url: '/api/blade-system/role/submit',\n    method: 'post',\n    data: row\n  });\n};\nexport var update = function update(row) {\n  return request({\n    url: '/api/blade-system/role/submit',\n    method: 'post',\n    data: row\n  });\n};\nexport var getRole = function getRole(roleIds) {\n  return request({\n    url: '/api/blade-system/menu/role-tree-keys',\n    method: 'get',\n    params: {\n      roleIds: roleIds\n    }\n  });\n};\nexport var getRoleTree = function getRoleTree(tenantId) {\n  return request({\n    url: '/api/blade-system/role/tree',\n    method: 'get',\n    params: {\n      tenantId: tenantId\n    }\n  });\n};",{"version":3,"sources":["/Volumes/Workzone/Saber/src/api/system/role.js"],"names":["request","getList","current","size","params","url","method","grantTree","grant","roleIds","menuIds","remove","ids","add","row","data","update","getRole","getRoleTree","tenantId"],"mappings":";;;;;;;;;AAAA,OAAOA,OAAP,MAAoB,gBAApB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD,EAAUC,IAAV,EAAgBC,MAAhB,EAA2B;AAChD,SAAOJ,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,6BADQ;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbF,IAAAA,MAAM,kCACDA,MADC;AAEJF,MAAAA,OAAO,EAAPA,OAFI;AAGJC,MAAAA,IAAI,EAAJA;AAHI;AAHO,GAAD,CAAd;AASD,CAVM;AAWP,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B,SAAOP,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,mCADQ;AAEbC,IAAAA,MAAM,EAAE;AAFK,GAAD,CAAd;AAID,CALM;AAOP,OAAO,IAAME,KAAK,GAAG,SAARA,KAAQ,CAACC,OAAD,EAAUC,OAAV,EAAsB;AACzC,SAAOV,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,8BADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbF,IAAAA,MAAM,EAAE;AACNK,MAAAA,OAAO,EAAPA,OADM;AAENC,MAAAA,OAAO,EAAPA;AAFM;AAHK,GAAD,CAAd;AAQD,CATM;AAWP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAS;AAC7B,SAAOZ,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,+BADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbF,IAAAA,MAAM,EAAE;AACNQ,MAAAA,GAAG,EAAHA;AADM;AAHK,GAAD,CAAd;AAOD,CARM;AAUP,OAAO,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,GAAD,EAAS;AAC1B,SAAOd,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,+BADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbS,IAAAA,IAAI,EAAED;AAHO,GAAD,CAAd;AAKD,CANM;AAQP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,CAACF,GAAD,EAAS;AAC7B,SAAOd,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,+BADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbS,IAAAA,IAAI,EAAED;AAHO,GAAD,CAAd;AAKD,CANM;AASP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACR,OAAD,EAAa;AAClC,SAAOT,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,uCADQ;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbF,IAAAA,MAAM,EAAE;AACNK,MAAAA,OAAO,EAAPA;AADM;AAHK,GAAD,CAAd;AAOD,CARM;AAUP,OAAO,IAAMS,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AACvC,SAAOnB,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,6BADQ;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbF,IAAAA,MAAM,EAAE;AACNe,MAAAA,QAAQ,EAARA;AADM;AAHK,GAAD,CAAd;AAOD,CARM","sourcesContent":["import request from '@/router/axios';\n\nexport const getList = (current, size, params) => {\n  return request({\n    url: '/api/blade-system/role/list',\n    method: 'get',\n    params: {\n      ...params,\n      current,\n      size,\n    }\n  })\n}\nexport const grantTree = () => {\n  return request({\n    url: '/api/blade-system/menu/grant-tree',\n    method: 'get',\n  })\n}\n\nexport const grant = (roleIds, menuIds) => {\n  return request({\n    url: '/api/blade-system/role/grant',\n    method: 'post',\n    params: {\n      roleIds,\n      menuIds\n    }\n  })\n}\n\nexport const remove = (ids) => {\n  return request({\n    url: '/api/blade-system/role/remove',\n    method: 'post',\n    params: {\n      ids,\n    }\n  })\n}\n\nexport const add = (row) => {\n  return request({\n    url: '/api/blade-system/role/submit',\n    method: 'post',\n    data: row\n  })\n}\n\nexport const update = (row) => {\n  return request({\n    url: '/api/blade-system/role/submit',\n    method: 'post',\n    data: row\n  })\n}\n\n\nexport const getRole = (roleIds) => {\n  return request({\n    url: '/api/blade-system/menu/role-tree-keys',\n    method: 'get',\n    params: {\n      roleIds,\n    }\n  })\n}\n\nexport const getRoleTree = (tenantId) => {\n  return request({\n    url: '/api/blade-system/role/tree',\n    method: 'get',\n    params: {\n      tenantId,\n    }\n  })\n}\n"]}]}