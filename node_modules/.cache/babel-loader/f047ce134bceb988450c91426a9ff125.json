{"remainingRequest":"/Volumes/Workzone/Saber/node_modules/babel-loader/lib/index.js!/Volumes/Workzone/Saber/node_modules/eslint-loader/index.js??ref--13-0!/Volumes/Workzone/Saber/src/api/system/dict.js","dependencies":[{"path":"/Volumes/Workzone/Saber/src/api/system/dict.js","mtime":1590478366874},{"path":"/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js","mtime":1590478895012},{"path":"/Volumes/Workzone/Saber/node_modules/babel-loader/lib/index.js","mtime":1590478873019},{"path":"/Volumes/Workzone/Saber/node_modules/eslint-loader/index.js","mtime":1590478888364}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Volumes/Workzone/Saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport request from '@/router/axios';\nexport var getList = function getList(current, size, params) {\n  return request({\n    url: '/api/blade-system/dict/list',\n    method: 'get',\n    params: _objectSpread(_objectSpread({}, params), {}, {\n      current: current,\n      size: size\n    })\n  });\n};\nexport var remove = function remove(ids) {\n  return request({\n    url: '/api/blade-system/dict/remove',\n    method: 'post',\n    params: {\n      ids: ids\n    }\n  });\n};\nexport var add = function add(row) {\n  return request({\n    url: '/api/blade-system/dict/submit',\n    method: 'post',\n    data: row\n  });\n};\nexport var update = function update(row) {\n  return request({\n    url: '/api/blade-system/dict/submit',\n    method: 'post',\n    data: row\n  });\n};\nexport var getDict = function getDict(id) {\n  return request({\n    url: '/api/blade-system/dict/detail',\n    method: 'get',\n    params: {\n      id: id\n    }\n  });\n};\nexport var getDictTree = function getDictTree() {\n  return request({\n    url: '/api/blade-system/dict/tree?code=DICT',\n    method: 'get'\n  });\n};",{"version":3,"sources":["/Volumes/Workzone/Saber/src/api/system/dict.js"],"names":["request","getList","current","size","params","url","method","remove","ids","add","row","data","update","getDict","id","getDictTree"],"mappings":";;;;;;;;;AAAA,OAAOA,OAAP,MAAoB,gBAApB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD,EAAUC,IAAV,EAAgBC,MAAhB,EAA2B;AAChD,SAAOJ,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,6BADQ;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbF,IAAAA,MAAM,kCACDA,MADC;AAEJF,MAAAA,OAAO,EAAPA,OAFI;AAGJC,MAAAA,IAAI,EAAJA;AAHI;AAHO,GAAD,CAAd;AASD,CAVM;AAWP,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAS;AAC7B,SAAOR,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,+BADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbF,IAAAA,MAAM,EAAE;AACNI,MAAAA,GAAG,EAAHA;AADM;AAHK,GAAD,CAAd;AAOD,CARM;AAUP,OAAO,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,GAAD,EAAS;AAC1B,SAAOV,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,+BADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbK,IAAAA,IAAI,EAAED;AAHO,GAAD,CAAd;AAKD,CANM;AAQP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,CAACF,GAAD,EAAS;AAC7B,SAAOV,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,+BADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbK,IAAAA,IAAI,EAAED;AAHO,GAAD,CAAd;AAKD,CANM;AASP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAQ;AAC7B,SAAOd,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,+BADQ;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbF,IAAAA,MAAM,EAAE;AACNU,MAAAA,EAAE,EAAFA;AADM;AAHK,GAAD,CAAd;AAOD,CARM;AASP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/B,SAAOf,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,uCADQ;AAEbC,IAAAA,MAAM,EAAE;AAFK,GAAD,CAAd;AAID,CALM","sourcesContent":["import request from '@/router/axios';\n\nexport const getList = (current, size, params) => {\n  return request({\n    url: '/api/blade-system/dict/list',\n    method: 'get',\n    params: {\n      ...params,\n      current,\n      size,\n    }\n  })\n}\nexport const remove = (ids) => {\n  return request({\n    url: '/api/blade-system/dict/remove',\n    method: 'post',\n    params: {\n      ids,\n    }\n  })\n}\n\nexport const add = (row) => {\n  return request({\n    url: '/api/blade-system/dict/submit',\n    method: 'post',\n    data: row\n  })\n}\n\nexport const update = (row) => {\n  return request({\n    url: '/api/blade-system/dict/submit',\n    method: 'post',\n    data: row\n  })\n}\n\n\nexport const getDict = (id) => {\n  return request({\n    url: '/api/blade-system/dict/detail',\n    method: 'get',\n    params: {\n      id,\n    }\n  })\n}\nexport const getDictTree = () => {\n  return request({\n    url: '/api/blade-system/dict/tree?code=DICT',\n    method: 'get'\n  })\n}\n"]}]}