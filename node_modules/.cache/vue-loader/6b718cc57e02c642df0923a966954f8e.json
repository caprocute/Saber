{"remainingRequest":"/Volumes/Workzone/Saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Workzone/Saber/src/views/tool/code.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Workzone/Saber/src/views/tool/code.vue","mtime":1590478366896},{"path":"/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js","mtime":1590478895012},{"path":"/Volumes/Workzone/Saber/node_modules/babel-loader/lib/index.js","mtime":1590478873019},{"path":"/Volumes/Workzone/Saber/node_modules/cache-loader/dist/cjs.js","mtime":1590478895012},{"path":"/Volumes/Workzone/Saber/node_modules/vue-loader/lib/index.js","mtime":1590478898888}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {getList, getCode, build, remove, add, update, copy} from \"@/api/tool/code\";\nimport {mapGetters} from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      form: {},\n      selectionList: [],\n      loading: true,\n      query: {},\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      option: {\n        height: 'auto',\n        calcHeight: 80,\n        searchShow: true,\n        searchMenuSpan: 6,\n        tip: false,\n        border: true,\n        index: true,\n        selection: true,\n        labelWidth: 120,\n        viewBtn: true,\n        column: [\n          {\n            label: \"数据源\",\n            prop: \"datasourceId\",\n            search: true,\n            span: 24,\n            type: \"select\",\n            dicUrl: \"/api/blade-develop/datasource/select\",\n            props: {\n              label: \"name\",\n              value: \"id\"\n            },\n            rules: [{\n              required: true,\n              message: \"请选择数据源\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"模块名\",\n            prop: \"codeName\",\n            search: true,\n            rules: [{\n              required: true,\n              message: \"请输入模块名\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"服务名\",\n            prop: \"serviceName\",\n            search: true,\n            rules: [{\n              required: true,\n              message: \"请输入服务名\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"表名\",\n            prop: \"tableName\",\n            rules: [{\n              required: true,\n              message: \"请输入表名\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"表前缀\",\n            prop: \"tablePrefix\",\n            hide: true,\n            rules: [{\n              required: true,\n              message: \"请输入表前缀\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"主键名\",\n            prop: \"pkName\",\n            hide: true,\n            rules: [{\n              required: true,\n              message: \"请输入主键名\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"包名\",\n            prop: \"packageName\",\n            overHidden: true,\n            rules: [{\n              required: true,\n              message: \"请输入包名\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"基础业务\",\n            prop: \"baseMode\",\n            type: 'radio',\n            dicUrl: \"/api/blade-system/dict/dictionary?code=yes_no\",\n            props: {\n              label: \"dictValue\",\n              value: \"dictKey\"\n            },\n            hide: true,\n            rules: [{\n              required: true,\n              message: \"请选择基础业务\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"包装器\",\n            prop: \"wrapMode\",\n            type: 'radio',\n            dicUrl: \"/api/blade-system/dict/dictionary?code=yes_no\",\n            props: {\n              label: \"dictValue\",\n              value: \"dictKey\"\n            },\n            hide: true,\n            rules: [{\n              required: true,\n              message: \"请选择包装器\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"后端生成路径\",\n            prop: \"apiPath\",\n            span: 24,\n            hide: true,\n            rules: [{\n              required: true,\n              message: \"请输入后端生成路径\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"前端生成路径\",\n            prop: \"webPath\",\n            span: 24,\n            hide: true,\n            rules: [{\n              required: true,\n              message: \"请输入前端生成路径\",\n              trigger: \"blur\"\n            }]\n          }\n        ]\n      },\n      data: []\n    };\n  },\n  computed: {\n    ...mapGetters([\"permission\"]),\n    permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.code_add, false),\n        viewBtn: this.vaildData(this.permission.code_view, false),\n        delBtn: this.vaildData(this.permission.code_delete, false),\n        editBtn: this.vaildData(this.permission.code_edit, false)\n      };\n    },\n    ids() {\n      let ids = [];\n      this.selectionList.forEach(ele => {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  },\n  methods: {\n    rowSave(row, done, loading) {\n      add(row).then(() => {\n        done();\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, error => {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate(row, index, done, loading) {\n      update(row).then(() => {\n        done();\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, error => {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(row.id);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n    },\n\n    searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    handleDelete() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(this.ids);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crud.toggleSelection();\n        });\n    },\n    handleBuild() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"是否生成选中模块的代码?\", {\n        title: \"代码生成确认\",\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return build(this.ids);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crud.toggleSelection();\n        });\n    },\n    handleCopy(row) {\n      copy(row.id).then(() => {\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"复制成功!\"\n        });\n      });\n    },\n    beforeOpen(done, type) {\n      if ([\"edit\", \"view\"].includes(type)) {\n        getCode(this.form.id).then(res => {\n          this.form = res.data.data;\n        });\n      }\n      done();\n    },\n    currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad(page, params = {}) {\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n        const data = res.data.data;\n        this.page.total = data.total;\n        this.data = data.records;\n        this.loading = false;\n        this.selectionClear();\n      });\n    }\n  }\n};\n",{"version":3,"sources":["code.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"code.vue","sourceRoot":"src/views/tool","sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               ref=\"crud\"\n               v-model=\"form\"\n               :permission=\"permissionList\"\n               :page=\"page\"\n               @row-del=\"rowDel\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               :before-open=\"beforeOpen\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   v-if=\"permission.code_delete\"\n                   plain\n                   @click=\"handleDelete\">删 除\n        </el-button>\n        <el-button type=\"primary\"\n                   size=\"small\"\n                   plain\n                   icon=\"el-icon-refresh\"\n                   @click=\"handleBuild\">代码生成\n        </el-button>\n      </template>\n      <template slot-scope=\"scope\" slot=\"menu\">\n        <el-button type=\"text\"\n                   size=\"small\"\n                   icon=\"el-icon-document-copy\"\n                   v-if=\"permission.code_edit\"\n                   @click.stop=\"handleCopy(scope.row)\">复制\n        </el-button>\n      </template>\n    </avue-crud>\n  </basic-container>\n</template>\n\n<script>\n  import {getList, getCode, build, remove, add, update, copy} from \"@/api/tool/code\";\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        form: {},\n        selectionList: [],\n        loading: true,\n        query: {},\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        option: {\n          height: 'auto',\n          calcHeight: 80,\n          searchShow: true,\n          searchMenuSpan: 6,\n          tip: false,\n          border: true,\n          index: true,\n          selection: true,\n          labelWidth: 120,\n          viewBtn: true,\n          column: [\n            {\n              label: \"数据源\",\n              prop: \"datasourceId\",\n              search: true,\n              span: 24,\n              type: \"select\",\n              dicUrl: \"/api/blade-develop/datasource/select\",\n              props: {\n                label: \"name\",\n                value: \"id\"\n              },\n              rules: [{\n                required: true,\n                message: \"请选择数据源\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"模块名\",\n              prop: \"codeName\",\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入模块名\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"服务名\",\n              prop: \"serviceName\",\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入服务名\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"表名\",\n              prop: \"tableName\",\n              rules: [{\n                required: true,\n                message: \"请输入表名\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"表前缀\",\n              prop: \"tablePrefix\",\n              hide: true,\n              rules: [{\n                required: true,\n                message: \"请输入表前缀\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"主键名\",\n              prop: \"pkName\",\n              hide: true,\n              rules: [{\n                required: true,\n                message: \"请输入主键名\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"包名\",\n              prop: \"packageName\",\n              overHidden: true,\n              rules: [{\n                required: true,\n                message: \"请输入包名\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"基础业务\",\n              prop: \"baseMode\",\n              type: 'radio',\n              dicUrl: \"/api/blade-system/dict/dictionary?code=yes_no\",\n              props: {\n                label: \"dictValue\",\n                value: \"dictKey\"\n              },\n              hide: true,\n              rules: [{\n                required: true,\n                message: \"请选择基础业务\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"包装器\",\n              prop: \"wrapMode\",\n              type: 'radio',\n              dicUrl: \"/api/blade-system/dict/dictionary?code=yes_no\",\n              props: {\n                label: \"dictValue\",\n                value: \"dictKey\"\n              },\n              hide: true,\n              rules: [{\n                required: true,\n                message: \"请选择包装器\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"后端生成路径\",\n              prop: \"apiPath\",\n              span: 24,\n              hide: true,\n              rules: [{\n                required: true,\n                message: \"请输入后端生成路径\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"前端生成路径\",\n              prop: \"webPath\",\n              span: 24,\n              hide: true,\n              rules: [{\n                required: true,\n                message: \"请输入前端生成路径\",\n                trigger: \"blur\"\n              }]\n            }\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.code_add, false),\n          viewBtn: this.vaildData(this.permission.code_view, false),\n          delBtn: this.vaildData(this.permission.code_delete, false),\n          editBtn: this.vaildData(this.permission.code_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      rowSave(row, done, loading) {\n        add(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      handleBuild() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"是否生成选中模块的代码?\", {\n          title: \"代码生成确认\",\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return build(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      handleCopy(row) {\n        copy(row.id).then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"复制成功!\"\n          });\n        });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getCode(this.form.id).then(res => {\n            this.form = res.data.data;\n          });\n        }\n        done();\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n</script>\n"]}]}